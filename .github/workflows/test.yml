name: Test Nextflow Lint Pre-commit Hook

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]
  workflow_dispatch:

jobs:
  test-hook-script:
    name: Test Hook Script
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        nextflow-version: ["23.04.0", "24.04.4", "latest"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Nextflow
        uses: nf-core/setup-nextflow@v2
        with:
          version: ${{ matrix.nextflow-version }}

      - name: Make hook executable
        run: chmod +x nextflow-lint-hook

      - name: Create test Nextflow file (valid)
        run: |
          cat > test_valid.nf << 'EOF'
          #!/usr/bin/env nextflow

          nextflow.enable.dsl = 2

          process sayHello {
              input:
              val name
              
              output:
              stdout
              
              script:
              """
              echo "Hello, $name!"
              """
          }

          workflow {
              Channel.of('World') | sayHello | view
          }
          EOF

      - name: Test hook with valid file
        run: ./nextflow-lint-hook

      - name: Create test Nextflow file (invalid syntax)
        run: |
          cat > test_invalid.nf << 'EOF'
          #!/usr/bin/env nextflow

          process badProcess {
              input:
              val name
              
              script:
              """
              echo "Missing output block"
              """
          }
          EOF

      - name: Test hook with invalid file (should fail)
        run: |
          if ./nextflow-lint-hook; then
            echo "Hook should have failed with invalid file"
            exit 1
          else
            echo "Hook correctly failed with invalid file"
          fi

  test-pre-commit-integration:
    name: Test Pre-commit Integration
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install Nextflow
        uses: nf-core/setup-nextflow@v2
        with:
          version: "latest"

      - name: Install pre-commit
        run: pip install pre-commit

      - name: Make hook executable
        run: chmod +x nextflow-lint-hook

      - name: Create test pre-commit config
        run: |
          cat > .pre-commit-config.yaml << EOF
          repos:
            - repo: local
              hooks:
                - id: nextflow-lint
                  name: Nextflow Lint
                  entry: ./nextflow-lint-hook
                  language: script
                  files: \.nf$
          EOF

      - name: Create test Nextflow file
        run: |
          cat > main.nf << 'EOF'
          #!/usr/bin/env nextflow

          nextflow.enable.dsl = 2

          process test {
              output:
              stdout
              
              script:
              """
              echo "Test process"
              """
          }

          workflow {
              test()
          }
          EOF

      - name: Run pre-commit on all files
        run: pre-commit run --all-files

      - name: Test pre-commit install
        run: |
          git init
          git add .
          pre-commit install
          echo "Pre-commit installed successfully"

  test-hook-variants:
    name: Test Hook Variants
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Nextflow
        uses: nf-core/setup-nextflow@v2
        with:
          version: "latest"

      - name: Make hook executable
        run: chmod +x nextflow-lint-hook

      - name: Create test Nextflow file
        run: |
          cat > format_test.nf << 'EOF'
          #!/usr/bin/env nextflow

          nextflow.enable.dsl = 2

          process messyFormat {
            input:
            val x
            output:
            stdout
            script:
            """
            echo $x
            """
          }

          workflow {
            Channel.of('test') | messyFormat | view
          }
          EOF

      - name: Test basic lint
        run: ./nextflow-lint-hook

      - name: Test lint with format (should modify files)
        run: |
          # Copy original for comparison
          cp format_test.nf format_test_original.nf

          # Run with format option
          ./nextflow-lint-hook --format || true

          echo "Format test completed"

      - name: Test lint with concise output
        run: ./nextflow-lint-hook --output concise

      - name: Test lint with sort declarations
        run: ./nextflow-lint-hook --sort-declarations

  test-edge-cases:
    name: Test Edge Cases
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Nextflow
        uses: nf-core/setup-nextflow@v2
        with:
          version: "latest"

      - name: Make hook executable
        run: chmod +x nextflow-lint-hook

      - name: Test with no Nextflow files
        run: |
          # Remove any .nf files
          rm -f *.nf

          # Should exit with code 0 (no files to check)
          ./nextflow-lint-hook
          echo "No files test passed"

      - name: Test with multiple Nextflow files
        run: |
          # Create multiple test files
          for i in {1..5}; do
            cat > "test${i}.nf" << EOF
          #!/usr/bin/env nextflow

          nextflow.enable.dsl = 2

          process test${i} {
              output:
              stdout
              
              script:
              """
              echo "Test ${i}"
              """
          }

          workflow {
              test${i}()
          }
          EOF
          done

          # Test with multiple files
          ./nextflow-lint-hook

      - name: Test with config files
        run: |
          cat > nextflow.config << 'EOF'
          params {
              input = 'test'
              output = 'results'
          }

          process {
              cpus = 1
              memory = '1 GB'
          }
          EOF

          # Config files shouldn't be processed (only .nf files)
          ./nextflow-lint-hook

  test-without-nextflow:
    name: Test Without Nextflow Installed
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Make hook executable
        run: chmod +x nextflow-lint-hook

      - name: Create test file
        run: |
          cat > test.nf << 'EOF'
          #!/usr/bin/env nextflow
          process test { script: "echo test" }
          EOF

      - name: Test hook without Nextflow (should fail gracefully)
        run: |
          if ./nextflow-lint-hook; then
            echo "Hook should have failed without Nextflow"
            exit 1
          else
            echo "Hook correctly failed without Nextflow"
          fi
